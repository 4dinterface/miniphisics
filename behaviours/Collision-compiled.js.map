{"version":3,"sources":["Collision.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;IAEP,SAAS;AAEF,WAFP,SAAS,CAED,MAAM,EAAC;0BAFf,SAAS;;AAGX,QAAI,CAAC,WAAW,GAAC,IAAI,CAAC;GACvB;;;;eAJG,SAAS;;WAMT,cAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAC;AACzB,UAAI,KAAK,GAAC,KAAK,CAAC,KAAK,CAAC;;;AAGtB,WAAI,IAAI,EAAE,GAAC,CAAC,EAAC,EAAE,GAAC,KAAK,CAAC,MAAM,EAAC,EAAE,EAAE,EAAC;AAChC,YAAI,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;;;;AAItB,aAAI,IAAI,EAAE,GAAC,EAAE,GAAC,CAAC,EAAE,EAAE,GAAC,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;;AACtC,cAAI,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;cACjB,SAAS,YAAA,CAAC;;AAEd,cAAI,KAAK,CAAC,IAAI,IAAI,SAAS,IAAI,KAAK,CAAC,IAAI,IAAI,YAAY,EAAE,SAAS,GAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9G,cAAI,KAAK,CAAC,IAAI,IAAI,YAAY,IAAI,KAAK,CAAC,IAAI,IAAI,SAAS,EAAE,SAAS,GAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9G,cAAI,KAAK,CAAC,IAAI,IAAI,YAAY,IAAI,KAAK,CAAC,IAAI,IAAI,YAAY,EAAE,SAAS,GAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;AAEpH,cAAG,SAAS,EAAE;;;;AAIZ,gBAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC,gBAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;AAEnC,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AAC3D,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AAC3D,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AAC3D,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;;AAE3D,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AAC3D,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AAC3D,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AAC3D,gBAAG,IAAI,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,KAAK,CAAC,KAAK,CAAC;WAC5D;SACF;OACF;KACF;;;WAGuB,kCAAC,OAAO,EAAE,OAAO,EAAC;AACxC,UAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;AACpG,UAAG,CAAC,GAAE,AAAC,OAAO,CAAC,CAAC,GAAC,CAAC,GAAK,OAAO,CAAC,CAAC,GAAC,CAAC,AAAC,AAAC,EAAE,OAAO,IAAI,CAAC;AAClD,aAAO,KAAK,CAAC;KACd;;;;;WAGoB,+BAAC,IAAI,EAAE,MAAM,EAAC;AACjC,UAAI,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,EAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC;UACrD,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;UACzE,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAE,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAE,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;AAE5F,UAAI,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,GAAC,CAAC,EAAE,OAAO;AACvD,SAAC,EAAC,MAAM,CAAC,CAAC,GAAC,CAAC,IAAE,MAAM,CAAC,CAAC,GAAC,UAAU,CAAC,CAAC,CAAA,AAAC;AACpC,SAAC,EAAC,MAAM,CAAC,CAAC,GAAC,CAAC,GAAE,IAAI,CAAC,CAAC,AAAC;OACtB,CAAC;AACF,aAAO,KAAK,CAAC;KACd;;;SA9DG,SAAS","file":"Collision-compiled.js","sourcesContent":["\"use strict\";\r\n\r\nclass Collision{\r\n\r\n  constructor(config){\r\n    this.isBehaviour=true;\r\n  }\r\n\r\n  tick(scene, time, interval){\r\n    var items=scene.items;\r\n\r\n    //������� ���������� �� ������ ��������\r\n    for(let i1=0;i1<items.length;i1++){\r\n      let item1 = items[i1];\r\n\r\n      //for(var i2=0;i2<this.items.length;i2++) {\r\n\r\n      for(var i2=i1+1; i2<items.length; i2++) { //�����������, � ���������� �� i �� ��� ����������, i1 ��� ��� ������� ������� ����������\r\n        let item2 = items[i2],\r\n            collision;\r\n\r\n        if (item1.type == \"BodyBox\" && item2.type == \"BodyCircle\") collision=this.collisionBoxAndCircle(item1, item2);\r\n        if (item1.type == \"BodyCircle\" && item2.type == \"BodyBox\") collision=this.collisionBoxAndCircle(item2, item1);\r\n        if (item1.type == \"BodyCircle\" && item2.type == \"BodyCircle\") collision=this.collisionCircleAndCircle(item1, item2);\r\n\r\n        if(collision) {\r\n          //������� ����������� ���� �� ������������ � �������, ���� ��������� �� ��� ��� ������ ������ �����������\r\n          //if(item1.pos.y<item2.pos.y  === item1.v.y>0 && item1.pos.x<item2.pos.x==item1.v.x>0) {\r\n\r\n          let napY = item2.pos.y-item1.pos.y; //���� item1 ������ �� >0, ���� item2 ������ ����� <0\r\n          let napX = item2.pos.x-item1.pos.x;\r\n\r\n          if(napX<0 && item1.v.x<0) item1.v.x=item1.v.x*-item1.elast;\r\n          if(napX>0 && item1.v.x>0) item1.v.x=item1.v.x*-item1.elast;\r\n          if(napY<0 && item1.v.y<0) item1.v.y=item1.v.y*-item1.elast;\r\n          if(napY>0 && item1.v.y>0) item1.v.y=item1.v.y*-item1.elast;\r\n\r\n          if(napX>0 && item2.v.x<0) item2.v.x=item2.v.x*-item2.elast;\r\n          if(napX<0 && item2.v.x>0) item2.v.x=item2.v.x*-item2.elast;\r\n          if(napY>0 && item2.v.y<0) item2.v.y=item2.v.y*-item2.elast;\r\n          if(napY<0 && item2.v.y>0) item2.v.y=item2.v.y*-item2.elast;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  collisionCircleAndCircle(circle1, circle2){\r\n    var r=Math.sqrt(Math.pow(circle1.pos.x-circle2.pos.x, 2)+Math.pow(circle1.pos.y-circle2.pos.y, 2) );\r\n    if(r<((circle1.d/2) + (circle2.d/2))) return true;\r\n    return false;\r\n  }\r\n\r\n  //��� ����� ��������� � ��������, �������� �� �� ���� ��� ������� �����\r\n  collisionBoxAndCircle(rect, circle){\r\n    var rectCenter = new Vector(rect.width/2,rect.height/2),\r\n      center = new Vector(circle.pos.x - rect.pos.x, circle.pos.y - rect.pos.y),\r\n      side = new Vector(Math.abs (center.x) - rectCenter.x, Math.abs (center.y) - rectCenter.y);\r\n\r\n    if (side.x <= circle.d/2 && side.y <= circle.d/2) return {\r\n      x:circle.d/2-(center.x-rectCenter.x),\r\n      y:circle.d/2-(side.y)\r\n    };\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\n//exports.Collision = Collision;"]}