{"version":3,"sources":["PhisicsScene.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;;;;;;IAEP,YAAY;YAAZ,YAAY;;;;;;;AAML,WANP,YAAY,CAMJ,MAAM,EAAE;0BANhB,YAAY;;AAOd,+BAPE,YAAY,6CAON;AACR,QAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,QAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACrB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAClC;;;;;;;eAXG,YAAY;;WAiBZ,cAAC,IAAI,EAAE;;AAET,UAAI,QAAQ,GAAG,AAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,IAAK,CAAC,CAAC;;;AAG3C,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;OAC/C;;;AAGD,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,YAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB,YAAI,IAAI,CAAC,gBAAgB,EAAE,SAAS;;AAEpC,YAAI,IAAI,UAAO,EAAE,SAAS;AAC1B,YAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;OACtD;;AAED,UAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,YAAI,EAAE,IAAI;OACX,CAAC,CAAC;;AAEH,UAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACjD,UAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACtB;;;;;;;WAKG,gBAAG;AACL,UAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KACb;;;;;;;WAKG,gBAAG;AACL,0BAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACtC;;;;;;;;WAME,aAAC,GAAG,EAAE;AACP,UAAI,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,KACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAE1B,SAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KAC5B;;;;;;;;WAOK,gBAAC,GAAG,EAAE;AACV,UAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChC,UAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAEzB;;;SA7EG,YAAY;GAAS,YAAY","file":"PhisicsScene-compiled.js","sourcesContent":["/**\r\n * �����\r\n */\r\n\"use strict\";\r\n\r\nclass PhisicsScene extends EventEmitter {\r\n\r\n  /**\r\n   * �����������\r\n   * @param config\r\n   */\r\n  constructor(config) {\r\n    super();\r\n    this.items = [];\r\n    this.behaviours = [];\r\n    this.tick = this.tick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * tick\r\n   * @param time\r\n   */\r\n  tick(time) {\r\n    //if(this.lastTime<0) this.lastTime=time-1;\r\n    var interval = (time - this.lastTime) || 0;\r\n\r\n    //�������� ��� ������������������ �� ����� ���������\r\n    for (let i = 0; i < this.behaviours.length; i++) {\r\n      this.behaviours[i].tick(this, time, interval);\r\n    }\r\n\r\n    //������� ������� �������� �� �������\r\n    for (let i = 0; i < this.items.length; i++) {\r\n      let item = this.items[i];\r\n      if (item.isCollisionState) continue;\r\n\r\n      if (item.static) continue;\r\n      item.pos = item.pos.add(item.v.mul(interval / 1000)); //��� �� ����� ��� � pos.y=pos.y+v.y/1000*interval\r\n    }\r\n\r\n    this.fire(\"tick\", {\r\n      time: time\r\n    });\r\n\r\n    this.animFrame = requestAnimationFrame(this.tick)\r\n    this.lastTime = time;\r\n  }\r\n\r\n  /**\r\n   * ��������� ������������\r\n   */\r\n  play() {\r\n    this.tick(0)\r\n  }\r\n\r\n  /**\r\n   * ������������� ������������\r\n   */\r\n  stop() {\r\n    cancelAnimationFrame(this.animFrame);\r\n  }\r\n\r\n  /**\r\n   * ��������� ���� ��� ��������� �� �����\r\n   * @param obj - ���� ��� ���������\r\n   */\r\n  add(obj) {\r\n    if (obj.isBehaviour) this.behaviours.push(obj)\r\n    else this.items.push(obj);\r\n\r\n    obj.startTime = Date.now();\r\n  }\r\n\r\n\r\n  /**\r\n   * ������� ���� �� �����\r\n   * @param obj\r\n   */\r\n  remove(obj) {\r\n    var i = this.items.indexOf(obj);\r\n    this.items.splice(i, 1);\r\n\r\n  }\r\n\r\n}"]}